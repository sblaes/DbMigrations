#!/bin/bash

#   Copyright 2011 Shaunak Kashyap
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

source /usr/local/libexec/db-migrations/logging.sh

# Configurables
UTC_TIME_WS_URI="http://developer.yahooapis.com/TimeService/V1/getTime?appid=foo&output=json"

get_timestamp() {
    response=$(curl -f -s $UTC_TIME_WS_URI)
    retval=$?
    if [ $retval -ne 0 ] ; then
        return $retval

    else
        echo $response | sed 's/{"Result":{"Timestamp":\([0-9]*\)}}/\1/'
    fi
}

print_usage() {
    echo -e "Usage:\tcreate <options>"
    echo 
    echo "Options:"
    echo -e  "\t-d <database name>"
    echo -e "\t\tSpecify the name of the database for which to create a migration. Required."
    echo
    echo -e "\t-a"
    echo -e "\t\tCreate an advanced migration (i.e. an executable migration file). Optional; default = create a basic migration"
    echo
    echo -e "\t-b <migrations base directory>"
    echo -e "\t\tSpecify the base directory to store migrations files. Optional; default = ."
    echo
    echo -e "\t-l <log level>"
    echo -e "\t\tSpecify the level of logging: DEBUG, INFO, WARNING, FATAL. Optional; default = INFO"
    echo
}

# Set defaults
let LOG_LEVEL=$LOG_LEVEL_INFO
MIG_LEVEL=simple
BASEDIR=.

# Get user input
while getopts ":d:ab:l:h" opt; do
    case $opt in
	d) DB_NAME=$OPTARG;;
	a) MIG_LEVEL=advanced;;
	b) BASEDIR=$OPTARG;;
	l) LOG_LEVEL_STR=$OPTARG;;
	h) print_usage; exit 0;;
	:) LOG_FATAL "Option -$OPTARG requires an argument"; print_usage;  exit 1;;
    esac
done 
	    
if [ "$DB_NAME" == "" ]; then
    LOG_FATAL "Database name not specified."
    print_usage
    exit 2
fi

case $LOG_LEVEL_STR in
    DEBUG)   let LOG_LEVEL=$LOG_LEVEL_DEBUG;;
    INFO)    let LOG_LEVEL=$LOG_LEVEL_INFO;;
    WARNING) let LOG_LEVEL=$LOG_LEVEL_WARNING;;
    FATAL)   let LOG_LEVEL=$LOG_LEVEL_FATAL;;
esac

# Generate timestamp
timestamp=$(get_timestamp)
retval=$?
if [ $retval -ne 0 ]; then
    LOG_FATAL "Could not generate unique timestamp for migration."
    exit $retval;
fi

# Create directories
dir=$BASEDIR/$DB_NAME/$timestamp
file=$dir/up
mkdir -p $dir
touch $file
if [ "$MIG_LEVEL" == "advanced" ]; then
    chmod 755 $file
else
    chmod 644 $file
fi

echo "Created $file"
